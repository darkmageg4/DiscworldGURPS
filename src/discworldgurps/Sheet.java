/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package discworldgurps;

import discworldgurps.data.Character;
import discworldgurps.data.DataLoader;
import discworldgurps.details.Details;
import discworldgurps.data.StatCalc;
import java.awt.GridLayout;
import java.awt.KeyboardFocusManager;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

/**
 *
 * @author mageg
 */
public class Sheet extends javax.swing.JFrame {

    Character character;

    DataLoader DL = new DataLoader();
    Details details = new Details();

    public static int advCount = -1;
    public static int disCount = -1;
    public static int langCount = -1;
    private JLabel[] advlab = new JLabel[10];
    private JLabel[] advcost = new JLabel[10];
    private JLabel[] dislab = new JLabel[10];
    private JLabel[] discost = new JLabel[10];
    private JLabel[] lang = new JLabel[4];
    private JLabel[] langspok = new JLabel[4];
    private JLabel[] langwrit = new JLabel[4];
    private JLabel[] langcost = new JLabel[4];
    private JLabel[] langspacer = new JLabel[4];

    int Rep = 0;

    /**
     * Creates new form Sheet
     */
    public Sheet() {
        initComponents();
        this.setLocationRelativeTo(null);
        LabelCreator();
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                String ObjButtons[] = {"Yes", "No"};
                int PromptResult = JOptionPane.showOptionDialog(null,
                        "Are you sure you want to exit?", "Discworld GURPS",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null,
                        ObjButtons, ObjButtons[1]);
                if (PromptResult == 0) {

                    int Prompt2Result = JOptionPane.showOptionDialog(null, "Save before exiting?", "DiscworldGURPS", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, ObjButtons, ObjButtons[1]);
                    if (Prompt2Result == JOptionPane.YES_OPTION) {
                        Save();
                        System.exit(0);
                    } else {
                        System.exit(0);
                    }
                }
            }
        });
        KeyboardFocusManager.getCurrentKeyboardFocusManager()
                .addPropertyChangeListener("permanentFocusOwner", new PropertyChangeListener() {
                    public void propertyChange(final PropertyChangeEvent e) {
                        if (e.getNewValue() instanceof JTextField) {
                            //  invokeLater needed for JFormattedTextField
                            SwingUtilities.invokeLater(new Runnable() {
                                public void run() {
                                    JTextField textField = (JTextField) e.getNewValue();
                                    textField.selectAll();
                                    Calc();
                                }
                            });
                        }
                        if (e.getNewValue() instanceof JComboBox) {
                            //  invokeLater needed for JFormattedTextField
                            SwingUtilities.invokeLater(new Runnable() {
                                public void run() {
                                    JComboBox comboBox = (JComboBox) e.getNewValue();
                                    Calc();
                                }
                            });
                        }
                    }
                });

        this.setExtendedState(MAXIMIZED_VERT);
        jPanelReputation.setVisible(false);
        Start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jTabbedPaneSheet = new javax.swing.JTabbedPane();
        jScrollPaneSheet = new javax.swing.JScrollPane();
        jPanelSheet = new javax.swing.JPanel();
        jLabelName = new javax.swing.JLabel();
        jLabelPlayerName = new javax.swing.JLabel();
        jLabelPoints = new javax.swing.JLabel();
        jButtonAddPoints = new javax.swing.JButton();
        jLabelHeight = new javax.swing.JLabel();
        jLabelSizeMod = new javax.swing.JLabel();
        jLabelWeight = new javax.swing.JLabel();
        jLabelAge = new javax.swing.JLabel();
        jTextFieldST = new javax.swing.JTextField();
        jLabelSTCost = new javax.swing.JLabel();
        jTextFieldDX = new javax.swing.JTextField();
        jLabelDXCost = new javax.swing.JLabel();
        jTextFieldIQ = new javax.swing.JTextField();
        jLabelIQCost = new javax.swing.JLabel();
        jTextFieldHT = new javax.swing.JTextField();
        jLabelHTCost = new javax.swing.JLabel();
        jTextFieldHP = new javax.swing.JTextField();
        jLabelHPCost = new javax.swing.JLabel();
        jTextFieldHPCurrent = new javax.swing.JTextField();
        jTextFieldWill = new javax.swing.JTextField();
        jLabelWillCost = new javax.swing.JLabel();
        jTextFieldPer = new javax.swing.JTextField();
        jLabelPerCost = new javax.swing.JLabel();
        jTextFieldFP = new javax.swing.JTextField();
        jLabelFPCost = new javax.swing.JLabel();
        jTextFieldFPCurrent = new javax.swing.JTextField();
        jTextFieldMP = new javax.swing.JTextField();
        jTextFieldMPCurrent = new javax.swing.JTextField();
        jLabelBL = new javax.swing.JLabel();
        jTextFieldBS = new javax.swing.JTextField();
        jLabelBSCost = new javax.swing.JLabel();
        jTextFieldBM = new javax.swing.JTextField();
        jLabelBMCost = new javax.swing.JLabel();
        jTextFieldTL = new javax.swing.JTextField();
        jLabelTLCost = new javax.swing.JLabel();
        jLabelPointsUnspent = new javax.swing.JLabel();
        jLabelEnc1 = new javax.swing.JLabel();
        jLabelEnc2 = new javax.swing.JLabel();
        jLabelEnc3 = new javax.swing.JLabel();
        jLabelEnc4 = new javax.swing.JLabel();
        jLabelEnc5 = new javax.swing.JLabel();
        jLabelEncBM1 = new javax.swing.JLabel();
        jLabelEncBM2 = new javax.swing.JLabel();
        jLabelEncBM3 = new javax.swing.JLabel();
        jLabelEncBM4 = new javax.swing.JLabel();
        jLabelEncBM5 = new javax.swing.JLabel();
        jLabelEncDodge1 = new javax.swing.JLabel();
        jLabelEncDodge2 = new javax.swing.JLabel();
        jLabelEncDodge3 = new javax.swing.JLabel();
        jLabelEncDodge4 = new javax.swing.JLabel();
        jLabelEncDodge5 = new javax.swing.JLabel();
        jLabelThrust = new javax.swing.JLabel();
        jLabelSwing = new javax.swing.JLabel();
        jButtonAdvAdd = new javax.swing.JButton();
        jButtonAdvRemove = new javax.swing.JButton();
        jPanelAdv = new javax.swing.JPanel();
        jPanelAdvCost = new javax.swing.JPanel();
        jLabelAdvTotal = new javax.swing.JLabel();
        jButtonDisAdd = new javax.swing.JButton();
        jButtonDisRemove = new javax.swing.JButton();
        jPanelDis = new javax.swing.JPanel();
        jPanelDisCost = new javax.swing.JPanel();
        jLabelDisTotal = new javax.swing.JLabel();
        jButtonLangAdd = new javax.swing.JButton();
        jButtonLangRemove = new javax.swing.JButton();
        jPanelLang = new javax.swing.JPanel();
        jPanelLangSpokWrit = new javax.swing.JPanel();
        jPanelLangCost = new javax.swing.JPanel();
        SheetBG = new javax.swing.JLabel();
        jScrollPaneDetails = new javax.swing.JScrollPane();
        jPanelDetails = new javax.swing.JPanel();
        jPanelReputation = new javax.swing.JPanel();
        jLabelRepTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        RepCost3 = new javax.swing.JLabel();
        jScrollPaneInventory = new javax.swing.JScrollPane();
        jPanelInventory = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenuItemLoad = new javax.swing.JMenuItem();
        jMenuItemNew = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(null);
        setResizable(false);

        jScrollPaneSheet.setMaximumSize(null);
        jScrollPaneSheet.setMinimumSize(null);
        jScrollPaneSheet.setName(""); // NOI18N

        jPanelSheet.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelName.setText("Name");
        jPanelSheet.add(jLabelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 250, 30));

        jLabelPlayerName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPlayerName.setText("Player");
        jPanelSheet.add(jLabelPlayerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 27, 140, 20));

        jLabelPoints.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPoints.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPoints.setText("0");
        jPanelSheet.add(jLabelPoints, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 30, 80, -1));

        jButtonAddPoints.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButtonAddPoints.setText("+");
        jButtonAddPoints.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPointsActionPerformed(evt);
            }
        });
        jPanelSheet.add(jButtonAddPoints, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 20, 40, 30));

        jLabelHeight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelHeight.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHeight.setText("0");
        jPanelSheet.add(jLabelHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, 80, 30));

        jLabelSizeMod.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelSizeMod.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSizeMod.setText("0");
        jPanelSheet.add(jLabelSizeMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 47, 70, 30));

        jLabelWeight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelWeight.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelWeight.setText("0");
        jPanelSheet.add(jLabelWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 80, 30));

        jLabelAge.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelAge.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAge.setText("0");
        jPanelSheet.add(jLabelAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 50, 80, 30));

        jTextFieldST.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldST.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldST.setText("10");
        jPanelSheet.add(jTextFieldST, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 50, 50));

        jLabelSTCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelSTCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSTCost.setText("0");
        jPanelSheet.add(jLabelSTCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 184, 40, 20));

        jTextFieldDX.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldDX.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDX.setText("10");
        jPanelSheet.add(jTextFieldDX, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 50, 50));

        jLabelDXCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelDXCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDXCost.setText("0");
        jPanelSheet.add(jLabelDXCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 40, 20));

        jTextFieldIQ.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldIQ.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldIQ.setText("10");
        jPanelSheet.add(jTextFieldIQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 300, 50, 50));

        jLabelIQCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelIQCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIQCost.setText("0");
        jPanelSheet.add(jLabelIQCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 40, 30));

        jTextFieldHT.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldHT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldHT.setText("10");
        jPanelSheet.add(jTextFieldHT, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, 50, 50));

        jLabelHTCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelHTCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHTCost.setText("0");
        jPanelSheet.add(jLabelHTCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, 40, 30));

        jTextFieldHP.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldHP.setText("10");
        jPanelSheet.add(jTextFieldHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, 50, 50));

        jLabelHPCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelHPCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHPCost.setText("0");
        jPanelSheet.add(jLabelHPCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 180, 40, 30));

        jTextFieldHPCurrent.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldHPCurrent.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldHPCurrent.setText("10");
        jPanelSheet.add(jTextFieldHPCurrent, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 50, 50));

        jTextFieldWill.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldWill.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldWill.setText("10");
        jPanelSheet.add(jTextFieldWill, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 50, 50));

        jLabelWillCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelWillCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelWillCost.setText("0");
        jPanelSheet.add(jLabelWillCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 250, 40, 30));

        jTextFieldPer.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldPer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldPer.setText("10");
        jPanelSheet.add(jTextFieldPer, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 50, 50));

        jLabelPerCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelPerCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPerCost.setText("0");
        jPanelSheet.add(jLabelPerCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 310, 40, 30));

        jTextFieldFP.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldFP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldFP.setText("10");
        jPanelSheet.add(jTextFieldFP, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, 50, 50));

        jLabelFPCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelFPCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFPCost.setText("0");
        jPanelSheet.add(jLabelFPCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 380, 40, 30));

        jTextFieldFPCurrent.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldFPCurrent.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldFPCurrent.setText("10");
        jPanelSheet.add(jTextFieldFPCurrent, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 360, 50, 50));

        jTextFieldMP.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldMP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldMP.setText("0");
        jPanelSheet.add(jTextFieldMP, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 170, 50, 50));

        jTextFieldMPCurrent.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextFieldMPCurrent.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldMPCurrent.setText("0");
        jPanelSheet.add(jTextFieldMPCurrent, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 170, 50, 50));

        jLabelBL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBL.setText("0");
        jPanelSheet.add(jLabelBL, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 430, 40, 20));

        jTextFieldBS.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldBS.setText("5.0");
        jPanelSheet.add(jTextFieldBS, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 450, 70, 30));

        jLabelBSCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBSCost.setText("0");
        jPanelSheet.add(jLabelBSCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 460, 40, -1));

        jTextFieldBM.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldBM.setText("5");
        jPanelSheet.add(jTextFieldBM, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 450, 70, 30));

        jLabelBMCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBMCost.setText("0");
        jPanelSheet.add(jLabelBMCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 460, 30, -1));

        jTextFieldTL.setText("4");
        jPanelSheet.add(jTextFieldTL, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 360, 40, 20));

        jLabelTLCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTLCost.setText("0");
        jPanelSheet.add(jLabelTLCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 364, 30, 20));

        jLabelPointsUnspent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPointsUnspent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPointsUnspent.setText("0");
        jPanelSheet.add(jLabelPointsUnspent, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 54, 80, 20));

        jLabelEnc1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEnc1.setText("0");
        jPanelSheet.add(jLabelEnc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 510, 50, 20));

        jLabelEnc2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEnc2.setText("0");
        jPanelSheet.add(jLabelEnc2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 530, 50, 30));

        jLabelEnc3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEnc3.setText("0");
        jPanelSheet.add(jLabelEnc3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 560, 50, 20));

        jLabelEnc4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEnc4.setText("0");
        jPanelSheet.add(jLabelEnc4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 580, 50, 30));

        jLabelEnc5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEnc5.setText("0");
        jPanelSheet.add(jLabelEnc5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 600, 50, 30));

        jLabelEncBM1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEncBM1.setText("0");
        jPanelSheet.add(jLabelEncBM1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 510, 50, 20));

        jLabelEncBM2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEncBM2.setText("0");
        jPanelSheet.add(jLabelEncBM2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 530, 50, 30));

        jLabelEncBM3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEncBM3.setText("0");
        jPanelSheet.add(jLabelEncBM3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 560, 50, 20));

        jLabelEncBM4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEncBM4.setText("0");
        jPanelSheet.add(jLabelEncBM4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 580, 50, 30));

        jLabelEncBM5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEncBM5.setText("0");
        jPanelSheet.add(jLabelEncBM5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 610, 50, 20));

        jLabelEncDodge1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEncDodge1.setText("0");
        jPanelSheet.add(jLabelEncDodge1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 510, 40, 20));

        jLabelEncDodge2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEncDodge2.setText("0");
        jPanelSheet.add(jLabelEncDodge2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 530, 40, 30));

        jLabelEncDodge3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEncDodge3.setText("0");
        jPanelSheet.add(jLabelEncDodge3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 560, 40, 20));

        jLabelEncDodge4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEncDodge4.setText("0");
        jPanelSheet.add(jLabelEncDodge4, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 580, 40, 30));

        jLabelEncDodge5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEncDodge5.setText("0");
        jPanelSheet.add(jLabelEncDodge5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 610, 40, 20));

        jLabelThrust.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelThrust.setText("thr");
        jPanelSheet.add(jLabelThrust, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 430, 60, 20));

        jLabelSwing.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSwing.setText("Sw");
        jPanelSheet.add(jLabelSwing, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 430, 60, 20));

        jButtonAdvAdd.setText("Add");
        jButtonAdvAdd.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButtonAdvAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdvAddActionPerformed(evt);
            }
        });
        jPanelSheet.add(jButtonAdvAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 640, 60, 20));

        jButtonAdvRemove.setText("Rem");
        jButtonAdvRemove.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButtonAdvRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdvRemoveActionPerformed(evt);
            }
        });
        jPanelSheet.add(jButtonAdvRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 640, 70, 20));

        jPanelAdv.setOpaque(false);
        jPanelAdv.setLayout(new java.awt.GridLayout(1, 0));
        jPanelSheet.add(jPanelAdv, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 660, 390, 270));

        jPanelAdvCost.setOpaque(false);
        jPanelAdvCost.setLayout(new java.awt.GridLayout(1, 0));
        jPanelSheet.add(jPanelAdvCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 660, 20, 280));

        jLabelAdvTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelAdvTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAdvTotal.setText("0");
        jPanelSheet.add(jLabelAdvTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 940, 50, 20));

        jButtonDisAdd.setText("Add");
        jButtonDisAdd.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButtonDisAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisAddActionPerformed(evt);
            }
        });
        jPanelSheet.add(jButtonDisAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 970, 60, 20));

        jButtonDisRemove.setText("Rem");
        jButtonDisRemove.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButtonDisRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDisRemoveActionPerformed(evt);
            }
        });
        jPanelSheet.add(jButtonDisRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 970, 70, 20));

        jPanelDis.setOpaque(false);
        jPanelSheet.add(jPanelDis, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 990, 390, 270));

        jPanelDisCost.setOpaque(false);
        jPanelSheet.add(jPanelDisCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 990, 20, 270));

        jLabelDisTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelDisTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDisTotal.setText("0");
        jPanelSheet.add(jLabelDisTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 1270, 40, 20));

        jButtonLangAdd.setText("Add");
        jButtonLangAdd.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButtonLangAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLangAddActionPerformed(evt);
            }
        });
        jPanelSheet.add(jButtonLangAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 230, 60, 20));

        jButtonLangRemove.setText("Rem");
        jButtonLangRemove.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButtonLangRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLangRemoveActionPerformed(evt);
            }
        });
        jPanelSheet.add(jButtonLangRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 230, 70, 20));

        jPanelLang.setOpaque(false);
        jPanelLang.setLayout(new java.awt.GridLayout());
        jPanelSheet.add(jPanelLang, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 250, 210, 100));

        jPanelLangSpokWrit.setOpaque(false);
        jPanelLangSpokWrit.setLayout(new java.awt.GridLayout());
        jPanelSheet.add(jPanelLangSpokWrit, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 250, 170, 100));

        jPanelLangCost.setOpaque(false);
        jPanelLangCost.setLayout(new java.awt.GridLayout());
        jPanelSheet.add(jPanelLangCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 260, 20, 90));

        SheetBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/discworldgurps/resources/CharacterSheet.jpg"))); // NOI18N
        SheetBG.setMaximumSize(null);
        SheetBG.setMinimumSize(null);
        SheetBG.setPreferredSize(null);
        jPanelSheet.add(SheetBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jScrollPaneSheet.setViewportView(jPanelSheet);

        jTabbedPaneSheet.addTab("Sheet", jScrollPaneSheet);

        jLabelRepTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelRepTitle.setText("Reputation");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Reputation");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("People Affected");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Frequency");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Description");

        RepCost3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        RepCost3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RepCost3.setText("0");

        javax.swing.GroupLayout jPanelReputationLayout = new javax.swing.GroupLayout(jPanelReputation);
        jPanelReputation.setLayout(jPanelReputationLayout);
        jPanelReputationLayout.setHorizontalGroup(
            jPanelReputationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReputationLayout.createSequentialGroup()
                .addGroup(jPanelReputationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelReputationLayout.createSequentialGroup()
                        .addGroup(jPanelReputationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelReputationLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addGap(46, 46, 46)
                                .addComponent(jLabel2)
                                .addGap(61, 61, 61)
                                .addComponent(jLabel3)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel4))
                            .addGroup(jPanelReputationLayout.createSequentialGroup()
                                .addGap(333, 333, 333)
                                .addComponent(jLabelRepTitle)))
                        .addGap(0, 300, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelReputationLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(RepCost3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelReputationLayout.setVerticalGroup(
            jPanelReputationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReputationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelRepTitle)
                .addGap(18, 18, 18)
                .addGroup(jPanelReputationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(RepCost3)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jPanelDetails.add(jPanelReputation);

        jScrollPaneDetails.setViewportView(jPanelDetails);

        jTabbedPaneSheet.addTab("Details", jScrollPaneDetails);

        jScrollPaneInventory.setViewportView(jPanelInventory);

        jTabbedPaneSheet.addTab("Inventory", jScrollPaneInventory);

        getContentPane().add(jTabbedPaneSheet, java.awt.BorderLayout.CENTER);

        jMenuFile.setText("File");

        jMenuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSave.setText("Save");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemSave);

        jMenuItemLoad.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemLoad.setText("Load");
        jMenuItemLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLoadActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemLoad);

        jMenuItemNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNew.setText("New");
        jMenuItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemNew);

        jMenuBar1.add(jMenuFile);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        Save();
    }//GEN-LAST:event_jMenuItemSaveActionPerformed

    private void jMenuItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewActionPerformed
        NewChar();
    }//GEN-LAST:event_jMenuItemNewActionPerformed

    private void jMenuItemLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLoadActionPerformed
        Load();
    }//GEN-LAST:event_jMenuItemLoadActionPerformed

    private void jButtonAdvAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdvAddActionPerformed
        if (advCount < 9) {
            details.runAdvantages();
            if (advCount != -1) {
                advlab[advCount].setText(details.getDesc());
                advcost[advCount].setText(details.getCost());
                Calc();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Advantages Full!", "Sorry...", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAdvAddActionPerformed

    private void jButtonAdvRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdvRemoveActionPerformed
        int ra = -1;
        JComboBox adv = new JComboBox();
        adv.removeAllItems();
        for (int r = 0; r < advlab.length; r++) {
            if (advlab[r].getText() != "") {
                adv.addItem(advlab[r].getText());
                ra++;
            }
        }
        if (ra >= 0) {
            int rem = JOptionPane.showConfirmDialog(null, adv, "Which Advantage?", JOptionPane.OK_CANCEL_OPTION, JOptionPane.DEFAULT_OPTION);
            try {
                if (rem == 0) {
                    int i = adv.getSelectedIndex();
                    advlab[i].setText("");
                    advcost[i].setText("");
                    advCount--;
                    String[] t = new String[ra + 1];
                    String[] tc = new String[ra + 1];
                    int ta = 0;
                    for (int s = ra; s >= 0; s--) {
                        t[ta] = advlab[s].getText();
                        tc[ta] = advcost[s].getText();
                        advlab[s].setText("");
                        advcost[s].setText("");
                        ta++;
                    }
                    int ab = 0;
                    for (int a = 0; a <= t.length; a++) {
                        if (t[ta - 1] != "") {
                            advlab[ab].setText(t[ta - 1]);
                            advcost[ab].setText(tc[ta - 1]);
                            ab++;
                        }
                        ta--;
                    }
                }
            } catch (Exception ex) {
            }
            Calc();
        }
    }//GEN-LAST:event_jButtonAdvRemoveActionPerformed

    private void jButtonDisAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisAddActionPerformed
        if (disCount < 9) {
            details.runDisadvantages();
            if (disCount != -1) {
                dislab[disCount].setText(details.getDesc());
                discost[disCount].setText(details.getCost());
                Calc();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Disadvantages Full!", "Sorry...", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDisAddActionPerformed

    private void jButtonDisRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDisRemoveActionPerformed
        int ra = -1;
        JComboBox dis = new JComboBox();
        dis.removeAllItems();
        for (int r = 0; r < dislab.length; r++) {
            if (dislab[r].getText() != "") {
                dis.addItem(dislab[r].getText());
                ra++;
            }
        }
        if (ra >= 0) {
            int rem = JOptionPane.showConfirmDialog(null, dis, "Which Disadvantage?", JOptionPane.OK_CANCEL_OPTION, JOptionPane.DEFAULT_OPTION);
            try {
                if (rem == 0) {
                    int i = dis.getSelectedIndex();
                    dislab[i].setText("");
                    discost[i].setText("");
                    disCount--;
                    String[] t = new String[ra + 1];
                    String[] tc = new String[ra + 1];
                    int ta = 0;
                    for (int s = ra; s >= 0; s--) {
                        t[ta] = dislab[s].getText();
                        tc[ta] = discost[s].getText();
                        dislab[s].setText("");
                        discost[s].setText("");
                        ta++;
                    }
                    int ab = 0;
                    for (int a = 0; a <= t.length; a++) {

                        if (t[ta - 1] != "") {
                            dislab[ab].setText(t[ta - 1]);
                            discost[ab].setText(tc[ta - 1]);
                            ab++;
                        }
                        ta--;
                    }
                }
            } catch (Exception ex) {
            }
            Calc();
        }
    }//GEN-LAST:event_jButtonDisRemoveActionPerformed

    private void jButtonAddPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPointsActionPerformed
        String addPoints = (JOptionPane.showInputDialog(null, "How many points?", "Add Points", JOptionPane.QUESTION_MESSAGE));
        if (!"".equals(addPoints) && addPoints != null) {
            int pointsSum = Integer.parseInt(addPoints) + Integer.parseInt(jLabelPoints.getText());
            jLabelPoints.setText(Integer.toString(pointsSum));
        }
        Calc();
    }//GEN-LAST:event_jButtonAddPointsActionPerformed

    private void jButtonLangAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLangAddActionPerformed
        if (langCount < 3) {
            details.runLang();
            if (details.isResult() == true) {
                langCount++;
                lang[langCount].setText(details.getLang());
                langspok[langCount].setText(details.getLangSpok());
                langwrit[langCount].setText(details.getLangWrit());
                langcost[langCount].setText(details.getCost());
                Calc();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Languages Full!", "Sorry...", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonLangAddActionPerformed

    private void jButtonLangRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLangRemoveActionPerformed
        int ra = -1;
        JComboBox lan = new JComboBox();
        lan.removeAllItems();
        for (int r = 0; r < lang.length; r++) {
            if (lang[r].getText() != "") {
                lan.addItem(lang[r].getText());
                ra++;
            }
        }
        if (ra >= 0) {
            int rem = JOptionPane.showConfirmDialog(null, lan, "Which Language?", JOptionPane.OK_CANCEL_OPTION, JOptionPane.DEFAULT_OPTION);
            try {
                if (rem == 0) {
                    int i = lan.getSelectedIndex();
                    lang[i].setText("");
                    langwrit[i].setText("");
                    langspok[i].setText("");
                    langcost[i].setText("");
                    langCount--;
                    String[] t = new String[ra + 1];
                    String[] tw = new String[ra + 1];
                    String[] ts = new String[ra + 1];
                    String[] tc = new String[ra + 1];
                    int ta = 0;
                    for (int s = ra; s >= 0; s--) {
                        t[ta] = lang[s].getText();
                        tw[ta] = langwrit[s].getText();
                        ts[ta] = langspok[s].getText();
                        tc[ta] = langcost[s].getText();
                        lang[s].setText("");
                        langwrit[s].setText("");
                        langspok[s].setText("");
                        langcost[s].setText("");
                        ta++;
                    }
                    int ab = 0;
                    for (int a = 0; a <= t.length; a++) {

                        if (t[ta - 1] != "") {
                            lang[ab].setText(t[ta - 1]);
                            langwrit[ab].setText(tw[ta - 1]);
                            langspok[ab].setText(ts[ta - 1]);
                            langcost[ab].setText(tc[ta - 1]);
                            ab++;
                        }
                        ta--;
                    }
                }
            } catch (Exception ex) {
            }
            Calc();
        }
    }//GEN-LAST:event_jButtonLangRemoveActionPerformed

    /**
     * Runs Start.java
     */
    private void Start() {
        Start start = new Start(this, true);
        start.setModal(true);
        start.setLocationRelativeTo(null);
        start.setVisible(true);
        String result = start.result;
        if (null == result) {
            System.exit(0);
        } else {
            switch (result) {
                case "new":
                    NewChar();
                    break;
                case "load":
                    Load();
                    break;
                default:
                    System.exit(0);
            }
        }
    }

    /**
     * Takes input from NewCharacter.java and creates a new instance of
     * character
     */
    private void NewChar() {
        character = new Character();
        NewCharacter newCharacter = new NewCharacter(this, true);
        newCharacter.setModal(true);
        newCharacter.setLocationRelativeTo(null);
        newCharacter.setVisible(true);
        if (newCharacter.closed != 1) {
            this.character.setName(newCharacter.name);
            this.character.setPlayerName(newCharacter.playerName);
            this.character.setPoints(Integer.parseInt(newCharacter.points));
            this.character.setHeight(Double.parseDouble(newCharacter.height));
            this.character.setWeight(Integer.parseInt(newCharacter.weight));
            this.character.setAge(Integer.parseInt(newCharacter.age));
            SetDetails();
        } else {
            Start();
        }
    }

    private void Save() {
        int returnval = this.jFileChooser1.showSaveDialog(this);
        if (returnval == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            try {
                this.character.setPoints(Integer.parseInt(jLabelPoints.getText()));
                this.character.setSt(Integer.parseInt(jTextFieldST.getText()));
                this.character.setDx(Integer.parseInt(jTextFieldDX.getText()));
                this.character.setIq(Integer.parseInt(jTextFieldIQ.getText()));
                this.character.setHt(Integer.parseInt(jTextFieldHT.getText()));
                this.character.setHp(Integer.parseInt(jTextFieldHP.getText()));
                this.character.setHpCurrent(Integer.parseInt(jTextFieldHPCurrent.getText()));
                this.character.setWill(Integer.parseInt(jTextFieldWill.getText()));
                this.character.setPer(Integer.parseInt(jTextFieldPer.getText()));
                this.character.setFp(Integer.parseInt(jTextFieldFP.getText()));
                this.character.setFpCurrent(Integer.parseInt(jTextFieldFPCurrent.getText()));
                this.character.setMp(Integer.parseInt(jTextFieldMP.getText()));
                this.character.setMpCurrent(Integer.parseInt(jTextFieldMPCurrent.getText()));
                this.character.setBs(Double.parseDouble(jTextFieldBS.getText()));
                this.character.setBm(Integer.parseInt(jTextFieldBM.getText()));
                String[] adv = new String[20];
                for (int i = 0; i < advlab.length; i++) {
                    adv[i] = advlab[i].getText();
                }
                for (int i = 0; i < advcost.length; i++) {
                    adv[i + 10] = advcost[i].getText();
                }
                this.character.setAdvantages(adv);
                String[] dis = new String[20];
                for (int i = 0; i < dislab.length; i++) {
                    dis[i] = dislab[i].getText();
                }
                for (int i = 0; i < discost.length; i++) {
                    dis[i + 10] = dislab[i].getText();
                }
                this.character.setDisadvantages(dis);

                this.character.Save(file);
                this.setTitle(file.getName());
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex);
                ex.printStackTrace();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex);
                ex.printStackTrace();
            }
        }
    }

    private void Load() {
        character = new Character();
        int returnval = this.jFileChooser1.showOpenDialog(this);
        if (returnval == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            try {
                this.character.Load(file);
                SetDetails();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        } else {
            Start();
        }
    }

    /**
     *
     */
    private void SetDetails() {
        jLabelName.setText(this.character.getName());
        jLabelPlayerName.setText(this.character.getPlayerName());
        jLabelPoints.setText(Integer.toString(this.character.getPoints()));
        jLabelHeight.setText(this.character.HeighttoString());
        jLabelWeight.setText(Integer.toString(this.character.getWeight()) + " lbs");
        jLabelAge.setText(Integer.toString(this.character.getAge()));
        jTextFieldST.setText(Integer.toString(this.character.getSt()));
        jTextFieldDX.setText(Integer.toString(this.character.getDx()));
        jTextFieldIQ.setText(Integer.toString(this.character.getIq()));
        jTextFieldHT.setText(Integer.toString(this.character.getHt()));
        jTextFieldHP.setText(Integer.toString(this.character.getHp()));
        jTextFieldHPCurrent.setText(Integer.toString(this.character.getHpCurrent()));
        jTextFieldWill.setText(Integer.toString(this.character.getWill()));
        jTextFieldPer.setText(Integer.toString(this.character.getPer()));
        jTextFieldFP.setText(Integer.toString(this.character.getFp()));
        jTextFieldFPCurrent.setText(Integer.toString(this.character.getFpCurrent()));
        jTextFieldBS.setText(Double.toString(this.character.getBs()));
        jTextFieldBM.setText(Integer.toString(this.character.getBm()));
        advCount = -1;
        for (int i = 0; i < advlab.length; i++) {
            if (!"".equals(this.character.getAdvantages()[i]) && this.character.getAdvantages()[i] != null) {
                advlab[i].setText(this.character.getAdvantages()[i]);
                advCount++;
            }
        }
        for (int i = 0; i < advcost.length; i++) {
            if (!"".equals(this.character.getAdvantages()[i + 10]) && this.character.getAdvantages()[i + 10] != null) {
                advcost[i].setText(this.character.getAdvantages()[i + 10]);
            }
        }
        disCount = -1;
        for (int i = 0; i < dislab.length; i++) {
            if (!"".equals(this.character.getDisadvantages()[i]) && this.character.getDisadvantages()[i] != null) {
                dislab[i].setText(this.character.getDisadvantages()[i]);
                disCount++;
            }
        }
        for (int i = 0; i < discost.length; i++) {
            if (!"".equals(this.character.getDisadvantages()[i + 10]) && this.character.getDisadvantages()[i + 10] != null) {
                discost[i].setText(this.character.getDisadvantages()[i + 10]);
            }
        }
        Calc();
        this.setTitle(character.getName());
    }

    private void Calc() {
        int st = Integer.parseInt(jTextFieldST.getText());
        int dx = Integer.parseInt(jTextFieldDX.getText());
        int iq = Integer.parseInt(jTextFieldIQ.getText());
        int hp = Integer.parseInt(jTextFieldHP.getText());
        int ht = Integer.parseInt(jTextFieldHT.getText());
        int will = Integer.parseInt(jTextFieldWill.getText());
        int per = Integer.parseInt(jTextFieldPer.getText());
        int fp = Integer.parseInt(jTextFieldFP.getText());
        double bs = Double.parseDouble(jTextFieldBS.getText());
        int bm = Integer.parseInt(jTextFieldBM.getText());
        int pu = Integer.parseInt(jLabelPoints.getText());
        int tl = Integer.parseInt(jTextFieldTL.getText());
        int adv = 0;
        for (int i = 0; i < advlab.length; i++) {
            if ("" != advcost[i].getText()) {
                int j = Integer.parseInt(advcost[i].getText());
                adv = adv + j;
            }
        }
        int dis = 0;
        for (int i = 0; i < dislab.length; i++) {
            if ("" != discost[i].getText()) {
                int j = Integer.parseInt(discost[i].getText());
                dis = dis + j;
            }
        }
        int lan = 0;
        for (int i = 0; i < lang.length; i++) {
            if ("" != langcost[i].getText()) {
                int j = Integer.parseInt(langcost[i].getText());
                lan = lan + j;
            }
        }
        StatCalc sc = new StatCalc(st, dx, iq, hp, ht, will, per, fp,
                this.character.getHeight(), bs, bm, pu, tl, adv, dis, lan);
        sc.Calc();
        jLabelSizeMod.setText(Integer.toString(sc.getSm()));
        jLabelSTCost.setText(Integer.toString(sc.getSpentST()));
        jLabelDXCost.setText(Integer.toString(sc.getSpentDX()));
        jLabelIQCost.setText(Integer.toString(sc.getSpentIQ()));
        jLabelHPCost.setText(Integer.toString(sc.getSpentHP()));
        jLabelHTCost.setText(Integer.toString(sc.getSpentHT()));
        jLabelWillCost.setText(Integer.toString(sc.getSpentWill()));
        jLabelPerCost.setText(Integer.toString(sc.getSpentPer()));
        jLabelFPCost.setText(Integer.toString(sc.getSpentFP()));
        jLabelBSCost.setText(Integer.toString(sc.getSpentBS()));
        jLabelBMCost.setText(Integer.toString(sc.getSpentBM()));
        jLabelTLCost.setText(Integer.toString(sc.getSpentTL()));
        jLabelAdvTotal.setText(Integer.toString(adv));
        jLabelDisTotal.setText(Integer.toString(dis));
        jLabelPointsUnspent.setText(Integer.toString(sc.getPointsUnspent()));
        DL.LoadDamage();
        jLabelThrust.setText(DL.getDamage().get(Integer.parseInt(jTextFieldST.getText()) - 1).thrust());
        jLabelSwing.setText(DL.getDamage().get(Integer.parseInt(jTextFieldST.getText()) - 1).swing());
        Encumberance();
    }

    private void Encumberance() {
        double blcalc = Math.round((double) (Integer.parseInt(jTextFieldST.getText()) * Integer.parseInt(jTextFieldST.getText())) / 5);
        int blset = (int) blcalc;
        jLabelBL.setText(Integer.toString(blset));
        jLabelEnc1.setText(jLabelBL.getText());
        jLabelEnc2.setText(Integer.toString(Integer.parseInt(jLabelBL.getText()) * 2));
        jLabelEnc3.setText(Integer.toString(Integer.parseInt(jLabelBL.getText()) * 3));
        jLabelEnc4.setText(Integer.toString(Integer.parseInt(jLabelBL.getText()) * 6));
        jLabelEnc5.setText(Integer.toString(Integer.parseInt(jLabelBL.getText()) * 10));
        jLabelEncBM1.setText(jTextFieldBM.getText());
        jLabelEncBM2.setText(Integer.toString((int) (Integer.parseInt(jTextFieldBM.getText()) * 0.8)));
        jLabelEncBM3.setText(Integer.toString((int) (Integer.parseInt(jTextFieldBM.getText()) * 0.6)));
        jLabelEncBM4.setText(Integer.toString((int) (Integer.parseInt(jTextFieldBM.getText()) * 0.4)));
        jLabelEncBM5.setText(Integer.toString((int) (Integer.parseInt(jTextFieldBM.getText()) * 0.2)));
        jLabelEncDodge1.setText(Integer.toString((int) (Double.parseDouble(jTextFieldBS.getText()) + 3)));
        jLabelEncDodge2.setText(Integer.toString((Integer.parseInt(jLabelEncDodge1.getText()) - 1)));
        jLabelEncDodge3.setText(Integer.toString((Integer.parseInt(jLabelEncDodge1.getText()) - 2)));
        jLabelEncDodge4.setText(Integer.toString((Integer.parseInt(jLabelEncDodge1.getText()) - 3)));
        jLabelEncDodge5.setText(Integer.toString((Integer.parseInt(jLabelEncDodge1.getText()) - 4)));
    }

    private void LabelCreator() {
        GridLayout Default = new GridLayout(0, 1);
        GridLayout LangLayout = new GridLayout(0, 3);
        jPanelAdv.setLayout(Default);
        jPanelAdvCost.setLayout(Default);
        for (int i = 0; i < advlab.length; i++) {
            jPanelAdv.add(advlab[i] = new JLabel());
            jPanelAdvCost.add(advcost[i] = new JLabel());
        }
        jPanelDis.setLayout(Default);
        jPanelDisCost.setLayout(Default);
        for (int i = 0; i < advlab.length; i++) {
            jPanelDis.add(dislab[i] = new JLabel());
            jPanelDisCost.add(discost[i] = new JLabel());
        }
        jPanelLang.setLayout(Default);
        jPanelLangSpokWrit.setLayout(LangLayout);
        jPanelLangCost.setLayout(Default);
        for (int i = 0; i < lang.length; i++) {
            jPanelLang.add(lang[i] = new JLabel());
            jPanelLangSpokWrit.add(langspok[i] = new JLabel());
            jPanelLangSpokWrit.add(langspacer[i] = new JLabel());
            jPanelLangSpokWrit.add(langwrit[i] = new JLabel());
            jPanelLangCost.add(langcost[i] = new JLabel());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sheet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel RepCost3;
    private javax.swing.JLabel SheetBG;
    private javax.swing.JButton jButtonAddPoints;
    private javax.swing.JButton jButtonAdvAdd;
    private javax.swing.JButton jButtonAdvRemove;
    private javax.swing.JButton jButtonDisAdd;
    private javax.swing.JButton jButtonDisRemove;
    private javax.swing.JButton jButtonLangAdd;
    private javax.swing.JButton jButtonLangRemove;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelAdvTotal;
    private javax.swing.JLabel jLabelAge;
    private javax.swing.JLabel jLabelBL;
    private javax.swing.JLabel jLabelBMCost;
    private javax.swing.JLabel jLabelBSCost;
    private javax.swing.JLabel jLabelDXCost;
    private javax.swing.JLabel jLabelDisTotal;
    private javax.swing.JLabel jLabelEnc1;
    private javax.swing.JLabel jLabelEnc2;
    private javax.swing.JLabel jLabelEnc3;
    private javax.swing.JLabel jLabelEnc4;
    private javax.swing.JLabel jLabelEnc5;
    private javax.swing.JLabel jLabelEncBM1;
    private javax.swing.JLabel jLabelEncBM2;
    private javax.swing.JLabel jLabelEncBM3;
    private javax.swing.JLabel jLabelEncBM4;
    private javax.swing.JLabel jLabelEncBM5;
    private javax.swing.JLabel jLabelEncDodge1;
    private javax.swing.JLabel jLabelEncDodge2;
    private javax.swing.JLabel jLabelEncDodge3;
    private javax.swing.JLabel jLabelEncDodge4;
    private javax.swing.JLabel jLabelEncDodge5;
    private javax.swing.JLabel jLabelFPCost;
    private javax.swing.JLabel jLabelHPCost;
    private javax.swing.JLabel jLabelHTCost;
    private javax.swing.JLabel jLabelHeight;
    private javax.swing.JLabel jLabelIQCost;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPerCost;
    private javax.swing.JLabel jLabelPlayerName;
    private javax.swing.JLabel jLabelPoints;
    private javax.swing.JLabel jLabelPointsUnspent;
    private javax.swing.JLabel jLabelRepTitle;
    private javax.swing.JLabel jLabelSTCost;
    private javax.swing.JLabel jLabelSizeMod;
    private javax.swing.JLabel jLabelSwing;
    private javax.swing.JLabel jLabelTLCost;
    private javax.swing.JLabel jLabelThrust;
    private javax.swing.JLabel jLabelWeight;
    private javax.swing.JLabel jLabelWillCost;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemLoad;
    private javax.swing.JMenuItem jMenuItemNew;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JPanel jPanelAdv;
    private javax.swing.JPanel jPanelAdvCost;
    private javax.swing.JPanel jPanelDetails;
    private javax.swing.JPanel jPanelDis;
    private javax.swing.JPanel jPanelDisCost;
    private javax.swing.JPanel jPanelInventory;
    private javax.swing.JPanel jPanelLang;
    private javax.swing.JPanel jPanelLangCost;
    private javax.swing.JPanel jPanelLangSpokWrit;
    private javax.swing.JPanel jPanelReputation;
    private javax.swing.JPanel jPanelSheet;
    private javax.swing.JScrollPane jScrollPaneDetails;
    private javax.swing.JScrollPane jScrollPaneInventory;
    private javax.swing.JScrollPane jScrollPaneSheet;
    private javax.swing.JTabbedPane jTabbedPaneSheet;
    private javax.swing.JTextField jTextFieldBM;
    private javax.swing.JTextField jTextFieldBS;
    private javax.swing.JTextField jTextFieldDX;
    private javax.swing.JTextField jTextFieldFP;
    private javax.swing.JTextField jTextFieldFPCurrent;
    private javax.swing.JTextField jTextFieldHP;
    private javax.swing.JTextField jTextFieldHPCurrent;
    private javax.swing.JTextField jTextFieldHT;
    private javax.swing.JTextField jTextFieldIQ;
    private javax.swing.JTextField jTextFieldMP;
    private javax.swing.JTextField jTextFieldMPCurrent;
    private javax.swing.JTextField jTextFieldPer;
    private javax.swing.JTextField jTextFieldST;
    private javax.swing.JTextField jTextFieldTL;
    private javax.swing.JTextField jTextFieldWill;
    // End of variables declaration//GEN-END:variables
}
